# iteration

def gcdIter(a, b):
    '''
    a, b: positive integers
    
    returns: a positive integer, the greatest common divisor of a & b.
    '''
    div = min(a,b)
    while True:
        if a%div == 0 and b%div == 0:
            return div
        div = div - 1
        
# recursion. 
# euclidian algorithm!

"""
A clever mathematical trick (due to Euclid) makes it easy to find 
greatest common divisors. Suppose that a and b are two positive integers: 
If b = 0, then the answer is a 
Otherwise, gcd(a, b) is the same as gcd(b, a % b) 
"""

def gcdRecur(a,b):
    if a%b == 0:
        return b
    else:
        return gcdRecur(b,a%b)
